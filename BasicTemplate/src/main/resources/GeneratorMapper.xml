<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
<!--    &lt;!&ndash; 指定连接数据库的 JDBC 驱动包所在位置，指定到你本机的完整路径 &ndash;&gt;-->
<!--    <classPathEntry location="E:\Java\tool\maven_repository\mysql\mysql-connector-java\5.1.9\mysql-connector-java-5.1.9.jar"/>-->

    <!-- 集成tkMapper -->


    <!-- 配置 table 表信息内容体，targetRuntime 指定采用 MyBatis3 的版本 -->
    <context id="tables" targetRuntime="MyBatis3">
<!--        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">-->
<!--            &lt;!&ndash; 这里配置我们刚才创建的基础mapper &ndash;&gt;-->
<!--            <property name="mappers" value="BaseMapper" />-->
<!--            &lt;!&ndash;caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true&ndash;&gt;-->
<!--            <property name="caseSensitive" value="true"/>-->
<!--        </plugin>-->
        <!-- 实现序列化 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />

        <!-- 实现tostring,但是包含hash值还有序列的id -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />

        <!-- 抑制生成注释，由于生成的注释都是英文的，可以不让它生成 -->
        <!-- 阻止生成自动注释, 反向代理生成的注释不太美观，还不如不注释-->
        <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- 配置数据库连接信息 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/springboottemplate?useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;nullCatalogMeansCurrent=true "
                        userId="root"
                        password="1842189692">
        </jdbcConnection>

        <!-- 类转换器信息 -->
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
            NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver >
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- 生成 model 类，targetPackage 指定 model 类的包名， targetProject 指定生成的 model 放在 IDEA 的哪个工程下面-->
        <javaModelGenerator targetPackage="com.example.basictemplate.model" targetProject="G:\JAVA实战\SpringBootTemplate\BasicTemplate\src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对model添加构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
            <property name="immutable" value="false"/>
        </javaModelGenerator>

        <!-- 生成 MyBatis 的 Mapper.xml 文件，targetPackage 指定 mapper.xml 文件的包名， targetProject 指定生成的 mapper.xml 放在 IDEA 的哪个工程下面 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="G:\JAVA实战\SpringBootTemplate\BasicTemplate\src\main\resources">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成 MyBatis 的 Mapper 接口类文件,targetPackage 指定 Mapper 接口类的包名， targetProject 指定生成的 Mapper 接口放在 IDEA 的哪个工程下面 -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.basictemplate.mapper" targetProject="G:\JAVA实战\SpringBootTemplate\BasicTemplate\src\main\java">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 数据库表名及对应的 Java 模型类名，有几个表写几个table -->
        <!-- 生成的表，以及实体类命名, 这里多了几个属性，主要是阻止生成example类(用不到)
            tableName : 数据库表名
            enableCountByExample : 是否生成查询总数的 Example
            enableDeleteByExample : 是否生成删除的 Example
            enableSelectByExample : 是否生成查询集合的 Example
            enableUpdateByExample : 是否生成修改的 Example
		-->
        <table tableName="user" domainObjectName="user"
               enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
                <property name="useActualColumnNames" value="false"/>
        </table>
    </context>
</generatorConfiguration>